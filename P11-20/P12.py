# Highly divisible triangular number

# The sequence of triangle numbers is generated by adding the natural numbers. 
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?


# Because I'm kinda tired today, I will solve this the lazy way, brute force.
import math

def findFactors(n):
    factors = 0
    for i in range(math.isqrt(n+1)):
        if i > 0 and n % i == 0:
            factors += 2
    return factors
        
gen = 0
tn = 0
factorCount = 0

while factorCount < 500:
    gen += 1
    tn += gen
    factorCount = findFactors(tn)

print(gen,tn)
    

# Solution: 76576500